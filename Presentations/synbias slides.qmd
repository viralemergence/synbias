---
title: Biases in parasite richness estimates arising from coinfection dynamics
summary: We present a likely source of bias in estimates of parasite richness - emergent properties arising from interactions between parasites. In the absence of good coinfection data, we provide a theoretical exploration.
authors: [admin]
tags: [disease ecology, coinfection, process-explicit modeling, theory]
categories: []
date: '2024-01-16T00:00:00Z'
format: markdown_github
css: slides-style.css
---

```{r setup, include=FALSE}
library(tidyverse, quietly = TRUE)
library(here, quietly = TRUE)
library(paletteer)
library(cowplot)
knitr::opts_chunk$set(message = FALSE, echo = FALSE)
```

## Can coinfection dynamics bias population estimates of parasite richness?

-   The short answer: yes.

## Are interactions among parasites, viruses, and bacteria common?

-   The short answer: we don't know
-   Interactions can be inferred with experimental infections, parasite removal, and longitudinal studies of infection
-   These haven't been done very often
-   Amy Sweeny will change this, we hope

## Observation: Richness estimates assume no parasite interaction

![Conceptual diagram of richness estimates becoming biased when parasites interact](synbias%20concept.png)

## Research Question

What are we missing when we estimate parasite or viral richness without accounting for coinfection dynamics?

## Approach: Individual-based modeling

SI model with pairwise interactions and no demography

![](model%20diagram%201.png){fig-alt="Conceptual diagram of two strains spreading in a bat population"}

## Approach: Parameter space explored

![](parameters%20coinfection.png){fig-alt="Illustrations of number of strains, competitive:facilitative ratio, interaction strength, and proportion of population sampled"}

## Approach: What a single simulation looks like

```{r single sim}
library(Rcpp)
sourceCpp(here("Scripts/ferrari.cpp"))
beta_s <- 0.0003
interactions <- runif(15*15, 0.5, 1.5) |> matrix(nrow = 15)
diag(interactions) <- 1
initial_pop <- c(rep(c(1, rep(0, 15)), 15), 
                 rep(0, 14760)) |> 
  matrix(nrow = 1000, byrow = T)
fifteen_strain <- ferrari(initial_pop = initial_pop, 
                       interactions = interactions, 
                       beta_s = beta_s, timesteps = 100)
fifteen_strain |> 
  array_branch(3) |> 
  map(colSums) |>
  map(\(x) {
    set_names(x, LETTERS[1:ncol(initial_pop)])
  }) |>
  bind_rows() |>
  rowid_to_column("Timestep") |> 
  pivot_longer(A:O, names_to = "Strain", values_to = "Cases") |> 
  ggplot(aes(x = Timestep, y = Cases, group = Strain)) +
  geom_line(aes(col = Strain), linewidth = 1.05, alpha = 0.7) +
  scale_color_paletteer_d("awtools::bpalette") +
  theme_minimal_grid()
```

## Does greater parasite richness "smooth out" effects of interaction on bias?

```{r strain number}
results <- "Data/simulation_round1.csv" |> here() |> read_csv(show_col_types = F)
results2 <- "Data/simulation_round2.csv" |> here() |> read_csv(show_col_types = F)
results3 <- "Data/simulation_round3.csv" |> here() |> read_csv(show_col_types = F)
all_results <- bind_rows(results, results2, results3) |> 
  mutate(sample_prop = replace_na(sample_prop, 0.1),
         percent_error = ((strains-richness_count)/strains)*100)
binned_data <- all_results %>%
  mutate(strains_mid = (floor(strains / 5) * 5) + 2.5,
         cf_ratio_mid = (floor(cf_ratio / 0.05) * 0.05) + 0.025) %>%
  group_by(strains_mid, cf_ratio_mid) %>%
  summarize(avg_percent_error = mean(percent_error, na.rm = TRUE))
# Define breaks and labels for the y-axis
y_breaks <- c(min(binned_data$cf_ratio_mid), max(binned_data$cf_ratio_mid))
y_labels <- c("100%\nfacilitative", "100%\ncompetitive")

# Creating the plot
ggplot(binned_data, aes(x = strains_mid, y = cf_ratio_mid, fill = avg_percent_error)) +
  geom_tile() +
  scale_fill_viridis_c(limits = c(0, 100)) +
  labs(title = "Heatmap: Strains vs C:F Ratio", 
       x = "Strains", fill = "% Error") +
  theme_minimal_grid() +
  scale_x_continuous(labels = scales::label_number()) + 
  scale_y_continuous(breaks = y_breaks, labels = y_labels) +
  theme(axis.title.y = element_blank())
```

## Does the strength of interactions matter?

```{r interaction strength}
binned_data <- all_results %>%
  mutate(interaction_strength_mid = (floor(interaction_strength / 0.03) * 0.03) + 0.015,
         cf_ratio_mid = (floor(cf_ratio / 0.05) * 0.05) + 0.025) %>%
  group_by(interaction_strength_mid, cf_ratio_mid) %>%
  summarize(avg_percent_error = mean(percent_error, na.rm = TRUE))
y_breaks <- c(min(binned_data$cf_ratio_mid), max(binned_data$cf_ratio_mid))
y_labels <- c("100%\nfacilitative", "100%\ncompetitive")

# Creating the plot
ggplot(binned_data, aes(x = interaction_strength_mid, y = cf_ratio_mid, fill = avg_percent_error)) +
  geom_tile() +
  scale_fill_viridis_c(limits = c(0, 100)) +
  labs(title = "Heatmap: Interaction Strength vs CF Ratio", 
       x = "Interaction Strength", fill = "% Error") +
  theme_minimal_grid() +
  scale_x_continuous(labels = scales::label_number()) + 
  scale_y_continuous(breaks = y_breaks, labels = y_labels) +
  theme(axis.title.y = element_blank())  
```

## What about the proportion of the population sampled?

You'd think this would be the most important factor. However...

```{r sample prop}
ggplot(all_results, aes(x = sample_prop*100, y = percent_error)) + 
  geom_point() +
  theme_minimal_grid() + xlab("% of Population Sampled") +
  ylab("% Error")
```

## Interactions between strains are more important than % sampled

```{r sample prop cf ratio}
binned_data <- all_results %>%
  mutate(sample_prop_mid = (floor(sample_prop / 0.04) * 0.04) + 0.02,
         cf_ratio_mid = (floor(cf_ratio / 0.05) * 0.05) + 0.025) %>%
  group_by(sample_prop_mid, cf_ratio_mid) %>%
  summarize(avg_percent_error = mean(percent_error, na.rm = TRUE))
y_breaks <- c(min(binned_data$cf_ratio_mid), max(binned_data$cf_ratio_mid))
y_labels <- c("100%\nfacilitative", "100%\ncompetitive")

# Creating the plot
ggplot(binned_data, aes(x = sample_prop_mid*100, y = cf_ratio_mid, fill = avg_percent_error)) +
  geom_tile() +
  scale_fill_viridis_c(limits = c(0, 100)) +
  labs(title = "Heatmap: Sample Proportion vs CF Ratio", 
       x = "% of Population Sampled", fill = "% Error") +
  theme_minimal_grid() +
  scale_x_continuous(labels = scales::label_number()) + 
  scale_y_continuous(breaks = y_breaks, labels = y_labels) +
  theme(axis.title.y = element_blank()) 
```

## Up Next

-   More simulations, this time with a lower baseline transmission rate

-   A search for any empirical data about C:F ratio and interaction strength in microbial communities
