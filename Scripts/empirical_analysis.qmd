---
title: "Analysis of Community Coinfection in Empirical Data"
author: "July Pilowsky"
bibliography: references.bib
format: pdf
---

```{r setup, message = FALSE, echo = FALSE, warning = FALSE}
library(tidyverse)
library(here)
library(cooccur)
library(tidyplots)
library(GGally)
library(gpboost)
knitr::opts_chunk$set(dpi = 300, dev = "png")
options(list(dplyr.summarise.inform = FALSE, future.rng.onMisuse = "ignore"))
daphnia <- readxl::read_excel(
  here("Data/Empirical/Parasite_data.xlsx"),
  col_types = c(
    "numeric",
    "date",
    "numeric",
    "skip",
    "skip",
    "date",
    "skip",
    "skip",
    "text",
    "text",
    "numeric",
    "skip",
    "skip",
    "text",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "text",
    "numeric",
    "text",
    "numeric",
    "text",
    "text",
    "numeric",
    "text",
    "numeric",
    "text",
    "numeric",
    "text",
    "numeric",
    "text",
    "text",
    "text",
    "text",
    "skip",
    "text",
    "text",
    "skip",
    "text",
    "text",
    "text",
    "text"
  )
)
snail <- read_csv(here("Data/Empirical/Trematode Infections.csv"), show_col_types = FALSE)
quiet <- function(x) { 
  sink(tempfile()) 
  on.exit(sink()) 
  invisible(force(x)) 
} 
```

# Hechinger et al. snail data

## About the data

Kevin Lafferty and Tara Stewart Merrill and colleagues collected data from intertidal snails (*Cerithidopsis californica*) at Carpinteria Salt Marsh Reserve from 2012 to 2014, dissecting 58 per site per month to find all of the trematode parasites (out of 20 species.) This parasite community has already been well-characterized in its interactions [@lafferty1994] and is known to be strongly competitive, with some trematodes known to be stronger competitors than others.

## Analytical approach

First, all analyses will be broken down by site and month to remove the possible effect of spatial and temporal clustering on coinfection. I am only comparing snails surveyed on the same date in the same place.

Second, I will characterize the overall structure of community interactions among trematodes. I will do this using a probabilistic model of species co-occurrence (Veech 2012) to find positive and negative associations between trematodes, and note which associations are common across points in space and time, and which pairs consistently have those associations.

Third, I will test theoretical predictions from our simulation model, namely that error in species diversity estimates will increase with more competitive interactions in a community and decrease with more facilitative interactions. I will do this by artificially decreasing the sample size of observations and comparing those estimates to the true figures from the full sample size.

## Community Structure

```{r community structure}
snail <- read_csv(here("Data/Empirical/Trematode Infections.csv"))
trematodes <- snail |>
    select(starts_with("trematode")) |>
    flatten_chr() |>
    unique() |>
    discard(
        .x = _,
        ~ is.na(.x)
    ) |>
    discard(
        .x = _,
        ~ str_detect(.x, "\\?")
    ) |>
    discard(
        .x = _,
        ~ str_detect(.x, "\\*")
    ) |>
    discard(
        .x = _,
        ~ str_detect(.x, "\\.")
    )
snail_data_prep <- function(df) {
    df |>
        pivot_longer(
            cols = starts_with("trematode"),
            names_to = "trematode_survey",
            values_to = "trematode"
        ) |>
        filter(trematode %in% trematodes) |>
        select(`Snail no.`, trematode) |>
        distinct() |>
        mutate(presence = TRUE) |>
        pivot_wider(
            names_from = trematode, # The species names become columns
            values_from = presence, # TRUE/FALSE based on presence
            values_fill = FALSE, # Fill absent species with FALSE
            id_cols = `Snail no.`,
            id_expand = TRUE
        ) |>
        column_to_rownames(var = "Snail no.") |>
        as.matrix() |>
        t()
}
cooccurrence_matrices <- snail |>
    group_by(site, survey) |>
    group_split() |>
    map(snail_data_prep)
cooccurrence_analyses <- cooccurrence_matrices |>
    map(\(m) quiet(cooccur(m,
        thresh = F, spp_names = TRUE,
        prob = "comb"
    )))
ggplot() +
    geom_density(aes(x = map_int(cooccurrence_analyses, "positive")),
        color = "blue"
    ) +
    geom_density(aes(x = map_int(cooccurrence_analyses, "negative")),
        color = "orange"
    ) +
    xlab("Number of Associations per Site/Month") +
    ggtitle("Species Associations (blue = positive, orange = negative)") +
    theme_bw()
```

We can see from this plot that negative associations between species (indicating competition within hosts) are much more common than positive associations (indicating facilitation between parasites.) This graph only includes those associations considered to be significant (that is to say, the probability that species co-occur less than expected (or more than expected) is less than 0.05.)

```{r competition:facilitation}
trematode_stats <- snail |>
  pivot_longer(
    cols = starts_with("trematode"),
    names_to = "trematode_survey",
    values_to = "trematode"
  ) |>
  group_by(`Snail no.`, site, survey) |>
  reframe(infection_intensity = 1 - str_count(trematode, "^u$")) |>
  filter(!is.na(infection_intensity)) |>
  group_by(site, survey) |>
  summarize(sum_infection_intensity = sum(infection_intensity)) 
df_cf <- snail |> 
    pivot_longer(
            cols = starts_with("trematode"),
            names_to = "trematode_survey",
            values_to = "trematode"
        ) |>
    filter(trematode %in% trematodes) |>
    group_by(site, survey) |> 
    summarize(true_species_richness = n_distinct(trematode)) |>
    ungroup() |>
    mutate(facilitative_pairs = map_int(cooccurrence_analyses, "positive"),
          competitive_pairs = map_int(cooccurrence_analyses, "negative")) |>
    left_join(trematode_stats, by = join_by(site, survey))
df_cf |>
    group_by(competitive_pairs, facilitative_pairs) |>
    summarize(count = n()) |>
    tidyplot(x = competitive_pairs, y = facilitative_pairs, fill = count) |>
    add_heatmap() |>
    adjust_x_axis_title("# of Competing Pairs") |>
    adjust_y_axis_title("# of Facilitating Pairs") |>
    adjust_title("Trematode Community Interactions")
df_cf |>
    ggplot() +
    geom_point(aes(x = true_species_richness, y = facilitative_pairs), color = "blue") +
    geom_smooth(aes(x = true_species_richness, y = facilitative_pairs), color = "blue",
      method = "loess", formula = 'y ~ x') +
    geom_point(aes(x = true_species_richness, y = competitive_pairs), color = "orange") +
    geom_smooth(aes(x = true_species_richness, y = competitive_pairs), color = "orange", 
      method = "loess", formula = 'y ~ x') +
    ggtitle("Species Richness as Confounder")
```

We can see here that most trematode communities (by site/month) have no facilitating pairs and 1 or 2 competing pairs. Also, while number of competing pairs is relatively flat with species richness, the number of facilitating pairs goes up with species richness, so it will have to be controlled for when testing theoretical predictions (not to mention the fact that increased species richness increases bias in estimates in and of itself.)

```{r simulate detectability}
library(furrr)
plan(multicore)

bootstrap_detect <- future_map(
  1:1000,
  ~ snail %>%
    group_by(site, survey) %>%
    slice_sample(n = 10) %>%
    pivot_longer(
      cols = starts_with("trematode"),
      names_to = "trematode_survey",
      values_to = "trematode"
    ) %>%
    filter(trematode %in% trematodes) %>%
    distinct(`Snail no.`, trematode, site, survey) %>%
    group_by(site, survey) |>
    summarize(richness_estimate = n_distinct(trematode)) %>%
    right_join(df_cf, by = join_by(site, survey))
) |>
  bind_rows()
bootstrap_detect |>
  mutate(
    bias = abs(true_species_richness - richness_estimate) /
      true_species_richness
  ) |>
  group_by(competitive_pairs, facilitative_pairs) |>
  summarize(mean_bias = mean(bias)) |>
  tidyplot(x = facilitative_pairs, y = competitive_pairs, fill = mean_bias) |>
  add_heatmap() |>
  adjust_x_axis_title("# of Facilitative Pairs") |>
  adjust_y_axis_title("# of Competitive Pairs")
```

This is the opposite of our expectation; however, I suspect that it is an artefact of parasite richness and infection intensity at different sites. I will test this suspicion using a correlogram.

```{r correlations}
bootstrap_detect |> 
  ungroup() |>
  mutate(bias = abs(true_species_richness - richness_estimate)/true_species_richness) |> 
  select(
    bias,
    true_species_richness,
    sum_infection_intensity,
    facilitative_pairs,
    competitive_pairs
  ) |>
  ggpairs()
```

Let's see if the correlation between competition strength and bias persists when I run a linear mixed model.

```{r lmm, warning = FALSE, message = FALSE}
bias <- bootstrap_detect |>
  mutate(
    bias = abs(true_species_richness - richness_estimate) /
      true_species_richness
  ) |>
  pull(bias)
fixed_effects <- as.matrix(bootstrap_detect[, 4:7])
random_effects <- cbind(
  bootstrap_detect$site,
  get_nested_categories(bootstrap_detect$site, bootstrap_detect$survey)
)
gp_model <- fitGPModel(
  likelihood = "gaussian",
  group_data = random_effects,
  y = bias,
  X = fixed_effects,
  params = list(std_dev = TRUE)
)
summary(gp_model)
```

The effect of competition and facilitation on bias is negative and significant, but the effect is very small. The only predictor that really affects bias in a significant way is true species richness.

# Tara's *Daphnia* data

## About the data

Tara Stewart Merrill and colleagues sampled *Daphnia* in multiple lakes at multiple timepoints in multiple lakes in 2017, extending over the productive season of the lakes (June-Dec.) The nice thing about this system for coinfection is that the system "resets" every year: a new crop of juvenile *Daphnia* emerge in the spring without any parasites, then get infected.

## Community Structure

```{r daphnia cooccurrence, output = FALSE, warning = FALSE}
daphnia_data_prep <- function(df) {
  df |> pivot_longer(cols = contains("status"), 
                        names_to = "Parasite",
                      values_to = "presence") |> 
  select(id = `data order`, Parasite, presence) |> 
  distinct() |> 
  mutate(presence = presence == "u",
         Parasite = str_split_i(Parasite, " ", 1)) |> 
  pivot_wider(
    names_from = Parasite,  # The species names become columns
    values_from = presence,  # TRUE/FALSE based on presence
    values_fill = FALSE,  # Fill absent species with FALSE
    id_cols = id,
    id_expand = TRUE
  ) |> 
    column_to_rownames(var = "id") |> 
    as.matrix() |> 
    t()
}
cooccurrence_matrices <- daphnia |> 
  group_by(lake, `date collected`) |> 
  group_split() |> 
  map(daphnia_data_prep)
cooccurrence_analyses <- cooccurrence_matrices |> 
  map(\(m) try(cooccur(m, thresh = F, spp_names = TRUE,
                   prob = "comb")))
```

```{r plot daphnia associations}
ggplot() +
  geom_density(aes(x = map_int(cooccurrence_analyses, "positive")), alpha = 0.6, 
               color = "blue") +
  geom_density(aes(x = map_int(cooccurrence_analyses, "negative")), alpha = 0.6, 
               color = "orange") +
  xlab("Number of Associations per Site/Month") +
  ggtitle("Species Associations (blue = positive, orange = negative)") +
  theme_bw()
```

This result is very different from the snail/trematode system. The associations are much more likely to be neutral, and there doesn't seem to be any salient difference in positive vs. negative associations.

## By Species

Again, I want to look at the specific species pairs involved here and get a sense of whether the (few) species pairs with positive or negative interactions are consistent in space and time.

```{r daphnia consistency}
cooccurrence_all <- cooccurrence_analyses |> map(prob.table) |> 
  map(\(df) select(df, sp1_name, sp2_name, p_lt, p_gt)) |> 
  imap(~bind_cols(.x, group_keys(group_by(snail, site, survey))[.y,])) |> 
  bind_rows()
cooccurrence_all |> group_by(sp1_name, sp2_name) |> 
  mutate(mean_comp = 1 - mean(p_lt)) |> 
  filter(mean_comp > 0.05) |> 
  arrange(sp1_name, sp2_name) |> 
  group_keys()
cooccurrence_all |> group_by(sp1_name, sp2_name) |> 
  mutate(mean_fac = 1 - mean(p_gt)) |> 
  filter(mean_fac > 0.05) |> 
  group_keys()
```

These results indicate that there are very few species pairs that are consistently competitive or facilitative across sites and times (three competitive pairs and one facilitative pair) and even then, they are much more likely to be neutral.

The interactions here are so weak that I'm not sure it's informative to compare species.