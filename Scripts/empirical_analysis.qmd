---
title: "Analysis of Community Coinfection in Empirical Data"
author: "July Pilowsky"
bibliography: references.bib
format: pdf
---

```{r setup, message = FALSE, echo = FALSE, warning = FALSE}
library(tidyverse)
library(here)
library(cooccur)
library(tidyplots)
library(GGally)
library(lme4)
daphnia <- readxl::read_excel(
  here("Data/Empirical/Parasite_data.xlsx"),
  col_types = c(
    "numeric",
    "date",
    "numeric",
    "skip",
    "skip",
    "date",
    "skip",
    "skip",
    "text",
    "text",
    "numeric",
    "skip",
    "skip",
    "text",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "numeric",
    "text",
    "numeric",
    "text",
    "numeric",
    "text",
    "text",
    "numeric",
    "text",
    "numeric",
    "text",
    "numeric",
    "text",
    "numeric",
    "text",
    "text",
    "text",
    "text",
    "skip",
    "text",
    "text",
    "skip",
    "text",
    "text",
    "text",
    "text"
  )
)
snail <- read_csv(here("Data/Empirical/Trematode Infections.csv"))
```

# Hechinger et al. snail data

## About the data

Kevin Lafferty and Tara Stewart Merrill and colleagues collected data from intertidal snails (*Cerithidopsis californica*) at Carpinteria Salt Marsh Reserve from 2012 to 2014, dissecting 58 per site per month to find all of the trematode parasites (out of 20 species.) This parasite community has already been well-characterized in its interactions [@lafferty1994] and is known to be strongly competitive, with some trematodes known to be stronger competitors than others.

## Analytical approach

First, all analyses will be broken down by site and month to remove the possible effect of spatial and temporal clustering on coinfection. I am only comparing snails surveyed on the same date in the same place.

Second, I will characterize the overall structure of community interactions among trematodes. I will do this using a probabilistic model of species co-occurrence (Veech 2012) to find positive and negative associations between trematodes, and note which associations are common across points in space and time, and which pairs consistently have those associations.

Third, I will test theoretical predictions from our simulation model, namely that error in species diversity estimates will increase with more competitive interactions in a community and decrease with more facilitative interactions. I will do this by artificially decreasing the sample size of observations and comparing those estimates to the true figures from the full sample size.

## Community Structure

```{r community structure}
snail <- read_csv(here("Data/Empirical/Trematode Infections.csv"))
trematodes <- snail |>
    select(starts_with("trematode")) |>
    flatten_chr() |>
    unique() |>
    discard(
        .x = _,
        ~ is.na(.x)
    ) |>
    discard(
        .x = _,
        ~ str_detect(.x, "\\?")
    ) |>
    discard(
        .x = _,
        ~ str_detect(.x, "\\*")
    ) |>
    discard(
        .x = _,
        ~ str_detect(.x, "\\.")
    )
snail_data_prep <- function(df) {
    df |>
        pivot_longer(
            cols = starts_with("trematode"),
            names_to = "trematode_survey",
            values_to = "trematode"
        ) |>
        filter(trematode %in% trematodes) |>
        select(`Snail no.`, trematode) |>
        distinct() |>
        mutate(presence = TRUE) |>
        pivot_wider(
            names_from = trematode, # The species names become columns
            values_from = presence, # TRUE/FALSE based on presence
            values_fill = FALSE, # Fill absent species with FALSE
            id_cols = `Snail no.`,
            id_expand = TRUE
        ) |>
        column_to_rownames(var = "Snail no.") |>
        as.matrix() |>
        t()
}
cooccurrence_matrices <- snail |>
    group_by(site, survey) |>
    group_split() |>
    map(snail_data_prep)
cooccurrence_analyses <- cooccurrence_matrices |>
    map(\(m) try(cooccur(m,
        thresh = F, spp_names = TRUE,
        prob = "comb"
    )))
ggplot() +
    geom_density(aes(x = map_int(cooccurrence_analyses, "positive")),
        color = "blue"
    ) +
    geom_density(aes(x = map_int(cooccurrence_analyses, "negative")),
        color = "orange"
    ) +
    xlab("Number of Associations per Site/Month") +
    ggtitle("Species Associations (blue = positive, orange = negative)") +
    theme_bw()
```

We can see from this plot that negative associations between species (indicating competition within hosts) are much more common than positive associations (indicating facilitation between parasites.) This graph only includes those associations considered to be significant (that is to say, the probability that species co-occur less than expected (or more than expected) is less than 0.05.)

```{r competition:facilitation}
df_cf <- snail |> 
    pivot_longer(
            cols = starts_with("trematode"),
            names_to = "trematode_survey",
            values_to = "trematode"
        ) |>
    filter(trematode %in% trematodes) |>
    group_by(site, survey) |> 
    summarize(true_species_richness = n_distinct(trematode)) |>
    ungroup() |>
    mutate(facilitative_pairs = map_int(cooccurrence_analyses, "positive"),
          competitive_pairs = map_int(cooccurrence_analyses, "negative"))
df_cf |>
    group_by(competitive_pairs, facilitative_pairs) |>
    summarize(count = n()) |>
    tidyplot(x = competitive_pairs, y = facilitative_pairs, fill = count) |>
    add_heatmap() |>
    adjust_x_axis_title("# of Competing Pairs") |>
    adjust_y_axis_title("# of Facilitating Pairs") |>
    adjust_title("Trematode Community Interactions")
df_cf |>
    ggplot() +
    geom_point(aes(x = species_richness, y = facilitative_pairs), color = "blue") +
    geom_smooth(aes(x = species_richness, y = facilitative_pairs), color = "blue") +
    geom_point(aes(x = species_richness, y = competitive_pairs), color = "orange") +
    geom_smooth(aes(x = species_richness, y = competitive_pairs), color = "orange") +
    ggtitle("Species Richness as Confounder")
```

We can see here that most trematode communities (by site/month) have no facilitating pairs and 1 or 2 competing pairs. Also, while number of competing pairs is relatively flat with species richness, the number of facilitating pairs goes up with species richness, so it will have to be controlled for when testing theoretical predictions (not to mention the fact that increased species richness increases bias in estimates in and of itself.)
To put this in the same framework as our theoretical modeling, what I will do is calculate for each site/month a metric of the strength of facilitation (measured as probability that species co-occur more than expected, summed for all pairs) and a metric of the strength of competition (measured as probability that species co-occur less than expected, summed for all pairs.)

```{r community structure}
facilitation_strength <- cooccurrence_analyses |> 
  map(prob.table) |> 
  map("p_gt") |> 
  map(\(v) 1-v) |> 
  map_dbl(sum)
competition_strength <- cooccurrence_analyses |> 
  map(prob.table) |> 
  map("p_lt") |> 
  map(\(v) 1-v) |> 
  map_dbl(sum)
snail |> group_by(site, survey) |> group_keys() |> 
  mutate(facilitation_strength = facilitation_strength,
         competition_strength = competition_strength,
         parasite_richness = cooccurrence_matrices |> map_int(nrow)) |> 
  tidyplot(x = facilitation_strength, y = competition_strength, 
           color = parasite_richness) |> 
  add_data_points() |> 
  add_annotation_line(x = 0, xend = 2.5, y = 0, yend = 2.5) |> 
  adjust_x_axis_title("Facilitation Strength") |> 
  adjust_y_axis_title("Competition Strength") |> 
  adjust_colors(name = "Parasite\nRichness")
```

I added a line to show where we would expect the data points to cluster if competition and facilitation strength were equal. Instead, almost everything is strongly skewed toward competition.

## By Species

I now want to analyze these interactions by species: how many competitive relationships do they have (and how many facilitative)? The first thing I need to do is check whether these relationships are consistent across time and space, because if they're not, I'll have to analyze these species within specific contexts.

```{r consistency}
cooccurrence_all <- cooccurrence_analyses |> map(prob.table) |> 
  map(\(df) select(df, sp1_name, sp2_name, p_lt, p_gt)) |> 
  imap(~bind_cols(.x, group_keys(group_by(snail, site, survey))[.y,])) |> 
  bind_rows()
cooccurrence_all |> group_by(sp1_name, sp2_name) |> 
  mutate(mean_comp = 1 - mean(p_lt), mean_fac = 1 - mean(p_gt)) |> 
  filter(mean_comp > 0.1, mean_fac > 0.1) |> 
  group_keys()
```

Here's something really interesting. There are a few pairs of trematode species that flips whether they are competitive or facilitative, sometimes within the same site. The pairs that do this quite a bit are *Himasthla rhigedana* and immature heterophyids, *Himasthla rhigedana* and *Renicola martini*, and *Probolocoryphe* and cyathocotylids.

There are more pairs that vary along the spectrum from being competitive to being neutral/random in their association:

```{r variation in competition}
cooccurrence_all |> group_by(sp1_name, sp2_name) |> 
  mutate(mean_comp = 1 - mean(p_lt), mean_fac = 1 - mean(p_gt),
         deviation_comp = abs((1-p_lt) - mean_comp), 
         deviation_fac = abs((1-p_gt) - mean_fac),
         mean_deviation_comp = mean(deviation_comp)) |> 
  filter(mean_deviation_comp > 0.2) |> 
  arrange(sp1_name, sp2_name)
```

It is not unexpected that the degree of competition might vary across space and time.

Since facilitation is rare in this system, I'm also curious about which species facilitate each other consistently.

```{r consistent facilitation}
cooccurrence_all |> group_by(sp1_name, sp2_name) |> 
  mutate(mean_fac = 1 - mean(p_gt), mean_comp = 1 - mean(p_lt)) |> 
  filter(mean_fac > 0.1, mean_comp < 0.1) |> 
  arrange(sp1_name, sp2_name) |> 
  group_keys()
```

What I notice about these "facilitative" pairs when I examine them in detail is that they are mostly neutral in their interactions and only occasionally facilitative.

Our theoretical expectation from the simulation modeling is that species with more competitive interactions should be less detectable than species with more neutral or facilitative interactions. We can test that expectation here using subsampling. Most of the site/month surveys have the same sample size, 58 snails. What we can do is bootstrap different random subsamples for each site/month survey and note whether the various parasite species are detected or not in the subsamples, then use strength of competitive interactions for that species as a predictor of detectability.

I will start by calculating strength of competitive and facilitative interactions for each parasite species at each site/month survey.

```{r by-species interaction strength}
by_species <- trematodes |>
  map(\(t) filter(cooccurrence_all, if_any(1:2, ~ str_detect(.x, t)))) |>
  map(\(df) df |> summarize(
    comp_strength = sum(1 - p_lt),
    fac_strength = sum(1 - p_gt),
    .by = site:survey
  )) |>
  map2(trematodes, ~ mutate(.x, species = rep(.y))) |>
  bind_rows() |> 
  arrange(site, survey, species) |> 
  bind_cols()
by_species |> 
  tidyplot(x = fac_strength, y = comp_strength, 
           color = species) |> 
  add_data_points() |> 
  add_annotation_line(x = 0, xend = 2.5, y = 0, yend = 2.5) |> 
  adjust_x_axis_title("Facilitation Strength") |> 
  adjust_y_axis_title("Competition Strength")
```

Now I will bootstrap subsamples of the survey data to get detectability values by species.

```{r simulate detectability}
library(furrr)
plan(multicore)

bootstrap_detect <- future_map(
  1:1000,
  ~ snail %>%
      group_by(site, survey) %>%
      slice_sample(n = 10) %>%
      pivot_longer(
        cols = starts_with("trematode"),
        names_to = "trematode_survey",
        values_to = "trematode"
      ) %>%
      filter(trematode %in% trematodes) %>%
      distinct(`Snail no.`, trematode, site, survey) %>%
      mutate(presence = TRUE) %>%
      right_join(by_species,
                 by = join_by(site, survey, trematode == species)) %>%
      mutate(presence = replace_na(presence, FALSE)),
  .progress = TRUE
)
bootstrap_detect |> bind_rows() |> group_by(site, survey, trematode) |> 
  summarize(Detectability = sum(presence)/n()) |> 
  right_join(by_species, by = join_by(site, survey, trematode == species)) |> 
  tidyplot(x = fac_strength, y = comp_strength, color = Detectability) |> 
  add_data_points() |> 
  adjust_x_axis_title("Facilitation Strength") |> 
  adjust_y_axis_title("Competition Strength")
```

This is the opposite of our expectation; however, I suspect that it is an artefact of parasite richness and infection intensity at different sites. I will test this suspicion using a correlogram.

```{r correlations}
trematode_stats <- snail |>
  pivot_longer(
    cols = starts_with("trematode"),
    names_to = "trematode_survey",
    values_to = "trematode"
  ) |>
  group_by(`Snail no.`, site, survey) |>
  reframe(infection_intensity = 1 - str_count(trematode, "^u$")) |>
  filter(!is.na(infection_intensity)) |>
  group_by(site, survey) |>
  summarize(sum_infection_intensity = sum(infection_intensity)) |>
  ungroup() |>
  mutate(parasite_richness = map_int(cooccurrence_analyses, "species"))
mean_prevalence <- cooccurrence_matrices |> 
  map(rowMeans) |> 
  map(as.data.frame, nm = "mean_prevalence") |> 
  map(rownames_to_column, var = "trematode") |> 
  map2(group_split(rowwise(group_keys(group_by(snail, site, survey)))),
       ~bind_cols(.x, .y)) |> 
  bind_rows() 
bootstrap_detect |> 
  bind_rows() |> 
  group_by(site, survey, trematode) |>
  summarize(Detectability = sum(presence) / n()) |>
  ungroup() |>
  arrange(site, survey, trematode) |> 
  right_join(by_species, by = join_by(site, survey, trematode == species)) |>
  left_join(trematode_stats) |>
  left_join(mean_prevalence) |> 
  select(
    sum_infection_intensity,
    parasite_richness,
    fac_strength,
    comp_strength,
    mean_prevalence,
    Detectability
  ) |>
  ggpairs()
```

Let's see if the (insanely strong) correlation between competition strength and detectability persists when I control for other factors:

```{r glmer}
snail_mod <- bootstrap_detect |> 
  bind_rows() |> 
  left_join(trematode_stats) |>
  left_join(mean_prevalence) |> 
  glmer(data = _,
        formula = presence ~ comp_strength + fac_strength + 
          sum_infection_intensity + parasite_richness + mean_prevalence + 
          (1|site),
        family = binomial)
```

# Tara's *Daphnia* data

## About the data

Tara Stewart Merrill and colleagues sampled *Daphnia* in multiple lakes at multiple timepoints in multiple lakes in 2017, extending over the productive season of the lakes (June-Dec.) The nice thing about this system for coinfection is that the system "resets" every year: a new crop of juvenile *Daphnia* emerge in the spring without any parasites, then get infected.

## Community Structure

```{r daphnia cooccurrence, output = FALSE, warning = FALSE}
daphnia_data_prep <- function(df) {
  df |> pivot_longer(cols = contains("status"), 
                        names_to = "Parasite",
                      values_to = "presence") |> 
  select(id = `data order`, Parasite, presence) |> 
  distinct() |> 
  mutate(presence = presence == "u",
         Parasite = str_split_i(Parasite, " ", 1)) |> 
  pivot_wider(
    names_from = Parasite,  # The species names become columns
    values_from = presence,  # TRUE/FALSE based on presence
    values_fill = FALSE,  # Fill absent species with FALSE
    id_cols = id,
    id_expand = TRUE
  ) |> 
    column_to_rownames(var = "id") |> 
    as.matrix() |> 
    t()
}
cooccurrence_matrices <- daphnia |> 
  group_by(lake, `date collected`) |> 
  group_split() |> 
  map(daphnia_data_prep)
cooccurrence_analyses <- cooccurrence_matrices |> 
  map(\(m) try(cooccur(m, thresh = F, spp_names = TRUE,
                   prob = "comb")))
```

```{r plot daphnia associations}
ggplot() +
  geom_density(aes(x = map_int(cooccurrence_analyses, "positive")), alpha = 0.6, 
               color = "blue") +
  geom_density(aes(x = map_int(cooccurrence_analyses, "negative")), alpha = 0.6, 
               color = "orange") +
  xlab("Number of Associations per Site/Month") +
  ggtitle("Species Associations (blue = positive, orange = negative)") +
  theme_bw()
```

This result is very different from the snail/trematode system. The associations are much more likely to be neutral, and there doesn't seem to be any salient difference in positive vs. negative associations.

```{r daphnia community structure}
facilitation_strength <- cooccurrence_analyses |> 
  map(prob.table) |> 
  map("p_gt") |> 
  map(\(v) 1-v) |> 
  map_dbl(sum)
competition_strength <- cooccurrence_analyses |> 
  map(prob.table) |> 
  map("p_lt") |> 
  map(\(v) 1-v) |> 
  map_dbl(sum)
daphnia |> group_by(lake, `date collected`) |> group_keys() |> 
  mutate(facilitation_strength = facilitation_strength,
         competition_strength = competition_strength,
         parasite_richness = cooccurrence_matrices |> map_int(nrow)) |> 
  tidyplot(x = facilitation_strength, y = competition_strength) |> 
  add_data_points() |> 
  add_annotation_line(x = 0, xend = 2.5, y = 0, yend = 2.5) |> 
  adjust_x_axis_title("Facilitation Strength") |> 
  adjust_y_axis_title("Competition Strength")
```

This distribution of associations is much closer to the 1:1 correlation between competition and facilitation strength, with most points clustered toward low-strength interactions. There is a slight bias toward competitive interactions. (I didn't include parasite richness here because it is the same at all sites.)

## By Species

Again, I want to look at the specific species pairs involved here and get a sense of whether the (few) species pairs with positive or negative interactions are consistent in space and time.

```{r daphnia consistency}
cooccurrence_all <- cooccurrence_analyses |> map(prob.table) |> 
  map(\(df) select(df, sp1_name, sp2_name, p_lt, p_gt)) |> 
  imap(~bind_cols(.x, group_keys(group_by(snail, site, survey))[.y,])) |> 
  bind_rows()
cooccurrence_all |> group_by(sp1_name, sp2_name) |> 
  mutate(mean_comp = 1 - mean(p_lt)) |> 
  filter(mean_comp > 0.05) |> 
  arrange(sp1_name, sp2_name) |> 
  group_keys()
cooccurrence_all |> group_by(sp1_name, sp2_name) |> 
  mutate(mean_fac = 1 - mean(p_gt)) |> 
  filter(mean_fac > 0.05) |> 
  group_keys()
```

These results indicate that there are very few species pairs that are consistently competitive or facilitative across sites and times (three competitive pairs and one facilitative pair) and even then, they are much more likely to be neutral.

The interactions here are so weak that I'm not sure it's informative to compare species.
