---
title: "Exploring the Parameter Space"
author: "July Pilowsky"
---

```{r setup, echo = F, include = F}
library(tidyverse)
library(scales)
library(paletteer)
library(cowplot)
library(Rcpp)
library(RcppArmadillo)
library(furrr)
theme_set(theme_cowplot())
source("lhs.R")
source("simulation_functions.R")
set.seed(185)
simulation <- FALSE
```

# Round 1

I am exploring the parameter space in four ways. I am exploring the effects of interaction strength, ratio of competitive to facilitative interactions, number of strains, and presence/absence of priority effects.

Aspects of simulations I am *not* changing are the population size, number of time steps, baseline transmission rate, or method of imperfect sampling.

## Simulation

```{r simulate}
if (simulation) {
  plan(multisession, workers = 15)
  imperfect_samples <-
    sample_data %>% rowwise() %>% group_split() %>%
    map(df_to_inputs) %>%
    future_map(\(x) {
      sourceCpp("ferrari.cpp")
      mat <- ferrari(x$initial_pop, x$interactions, 2e-04, 100)
      disease_sample(mat, prop = 0.1, imperfect_assays = FALSE)
    }, .progress = T, seed = NULL)
  results <- sample_data %>%
    mutate(richness_count = map_dbl(imperfect_samples, sum))
  write_csv(results, "simulation_round1.csv")
} else {
  results <- read_csv("simulation_round1.csv", show_col_types = F)
}
head(results)
```

# Visualization

```{r strains}
ggplot(results, aes(x = strains, y = richness_count, col = cf_ratio)) +
  geom_point() +
  scale_color_paletteer_c("scico::vikO", name = "C:F Ratio") +
  xlab("True Strain Number") +
  ylab("Measured Strain Number") +
  ggtitle("True vs. Measured Viral Richness")
results |> 
  mutate(underestimate = richness_count/strains*100) |> 
  ggplot(aes(x = strains, y = underestimate, col = cf_ratio)) +
  geom_point() +
  scale_color_paletteer_c("scico::vikO", name = "C:F Ratio") +
  xlab("Strain Number") +
  ylab("% Underestimate of True Richness") +
  ggtitle("Effect of Strain Number on Bias")
```

```{r interaction strength}
results |> mutate(underestimate = richness_count/strains*100) |> 
  ggplot(aes(x = cf_ratio, y = underestimate, col = interaction_strength)) +
  scale_color_paletteer_c("scico::oslo", direction = -1, 
                          name = "Interaction\nStrength") +
  geom_point() +
  xlab("C:F Ratio") +
  ylab("% Underestimate of True Richness") +
  ggtitle("Effect of Interaction Strength on Bias")
```

```{r priority effects}
results |> mutate(underestimate = richness_count/strains*100) |> 
  ggplot(aes(x = priority_effects, y = underestimate, 
             fill = priority_effects)) +
  scale_fill_paletteer_d("nbapalettes::heat_vice") +
  geom_violin() +
  xlab("Priority Effects") +
  ylab("% Underestimate of True Richness") +
  theme(legend.position = "none")
```

## Figures

# Rounds 2 and 3

Round 1 went well, but there are some new factors we want to consider in another round of modeling. One is to explore higher numbers of strains (the last round was capped at 100.) Another is to explore interactions between sampling proportion (percent of population sampled) and different interaction schemes among strains. I will address this with two new rounds of modeling, shown here:

```{r round 2 and 3 data}
library(poems)
synbias_lhs <- LatinHypercubeSampler$new()
synbias_lhs$set_uniform_parameter("interaction_strength", 0, 0.75)
synbias_lhs$set_class_parameter("priority_effects", c(TRUE, FALSE))
synbias_lhs$set_uniform_parameter("cf_ratio")
synbias_lhs$set_uniform_parameter("strains", 100, 200, decimals = 0)
sample_data2 <- synbias_lhs$generate_samples(10000, random_seed = 198) %>%
  rowid_to_column("id")
synbias_lhs$set_uniform_parameter("strains", 10, 200, decimals = 0)
synbias_lhs$set_uniform_parameter("sample_prop", 0.01, 1)
sample_data3 <- synbias_lhs$generate_samples(10000, random_seed = 198) %>%
  rowid_to_column("id")
```

## Simulation

```{r round 2 and 3 simulations}
if (simulation) {
  plan(multisession, workers = 15)
  imperfect_samples <-
    sample_data2 %>% rowwise() %>% group_split() %>%
    map(df_to_inputs) %>%
    future_map(\(x) {
      sourceCpp("ferrari.cpp")
      mat <- ferrari(x$initial_pop, x$interactions, 2e-04, 100)
      disease_sample(mat, prop = 0.1, imperfect_assays = FALSE)
    }, .progress = T, seed = NULL)
  results2 <- sample_data2 %>%
    mutate(richness_count = map_dbl(imperfect_samples, sum))
  write_csv(results2, "simulation_round2.csv")
  rm(imperfect_samples) # release from memory
  inputs <- sample_data3 |> rowwise() |> 
    group_split() |> map(df_to_inputs)
  imperfect_samples <- future_map(sample_data3$id, \(i) {
    sourceCpp("ferrari.cpp")
    mat <- ferrari(inputs[[i]]$initial_pop, inputs[[i]]$interactions, 2e-04,
                   100)
    disease_sample(mat, prop = sample_data3$sample_prop[i],
                   imperfect_assays = FALSE)
  })
  results3 <- sample_data3 |> 
              mutate(richness_count = map_dbl(imperfect_samples, sum))
  write_csv(results3, "simulation_round3.csv")
} else {
  results2 <- read_csv("simulation_round2.csv")
  results3 <- read_csv("simulation_round3.csv")
}
```

## Figures